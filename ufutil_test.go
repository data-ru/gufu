package ufutil

import (
	"encoding/json"
	"os"
	"runtime/debug"
	"testing"
)

func TestLogin(t *testing.T) {
	user, pass := os.Getenv("UFU_USER"), os.Getenv("UFU_PASS")
	a, err := LoginViaSSO(user, pass)
	if err != nil {
		t.Fatal(err)
	}
	t.Log(a)
}

func TestCardapioCampi(t *testing.T) {
	a, err := ObterTodosOsCardapios()
	if err != nil {
		if err == ErrNãoHáRefeições {
			t.Log("não há refeições")
			t.SkipNow()
		}
		t.Fatal(err)
	}
	t.Log(a)
}

func TestCardapioCampiSantaMonica(t *testing.T) {
	a, err := ObterCardapioPorCampus("sm")
	if err != nil {
		if err == ErrNãoHáRefeições {
			t.Log("não há refeições")
			t.SkipNow()
		}
		t.Fatal(err)
	}
	t.Log(a)
}

func TestCardapioFuturoCampiSantaMonica(t *testing.T) {
	a, err := ObterCardapiosFuturosPorCampus("sm")
	if err != nil {
		if err == ErrNãoHáRefeições {
			t.Log("não há refeições")
			t.SkipNow()
		}
		t.Fatal(err)
	}
	t.Logf("Almoço de amanhã (%v): %v de proteina, guarnição é: %v", a[1].Data, a[1].PrincipalAlmoco, a[1].GuarnicaoAlmoco)
}

func TestValidarId(t *testing.T) {
	v, err := ObterIdUfu(os.Getenv("UFU_ID"))
	if err != nil {
		debug.PrintStack()
		t.Fatal(err)
	}
	e, _ := json.Marshal(v)
	t.Logf("%s", e)
}

func TestDescriptografar(t *testing.T) {
	tt := `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`
	v, err := Descriptografar(tt)
	if err != nil {
		t.Fatal(err)
	}
	t.Logf("%s", v)

}
